//Hannah Ku 3/19/17 2nd Period CompSci
//this is the abstract RealCell class that has methods that will be inherited or overridden.
package textExcel;

public abstract class RealCell implements Cell {
	private String abbreviatedValue;
	private String doubleCellValue;
	
	@Override
	public String abbreviatedCellText() {
		if(doubleCellValue.contains(")")){
			abbreviatedValue = Double.toString(getDoubleValue());
		}
		abbreviatedValue = getCellText();
		
		if(abbreviatedValue.length() > 10){
			return abbreviatedValue.substring(0, 10);
		}
		if(abbreviatedValue.length() < 10){
			if(abbreviatedValue.contains(".")){
				
				int decimalIndex = abbreviatedValue.indexOf(".");
				String stringNumAfterDecimal = abbreviatedValue.substring(decimalIndex, abbreviatedValue.toString().length() - 1);
				double numbersAfterDecimal = Double.parseDouble(stringNumAfterDecimal);
				
				if(numbersAfterDecimal != 0.0 && stringNumAfterDecimal.contains("0") && !abbreviatedValue.contains("%")){
					for(int i = abbreviatedValue.length() - 1; i > 0; i--){
						//if it finds a number that is not zero, return substring
						if(abbreviatedValue.charAt(i) != '0'){
							abbreviatedValue = abbreviatedValue.substring(0, i + 1);
							addSpaces();
							return abbreviatedValue;
						}
					}
				}
				if(numbersAfterDecimal == 0.0){
					abbreviatedValue = abbreviatedValue.substring(0, decimalIndex + 2);
				}
			}else if(!abbreviatedValue.contains("%")){
				abbreviatedValue += ".0";
			}
			addSpaces();
		}
		return abbreviatedValue;
}
	
	public void addSpaces(){
		int difference = 10 - abbreviatedValue.length();
		for(int k = 0; k < difference; k++){
			abbreviatedValue += " ";
		}
	}

	@Override
	public String fullCellText() {
		if(!doubleCellValue.contains(".") && !doubleCellValue.contains("%")){
			doubleCellValue = "hi";
		}
		return Double.toString(getDoubleValue());
	}
	
	public void setCellText(String value){
		this.doubleCellValue = value;
	}
	 
	public String getCellText(){
		return doubleCellValue;
	}
	
	public abstract double getDoubleValue();

}
