package textExcel;
import java.util.*;
// Update this file with your own code.

public class Spreadsheet implements Grid
{
	private Cell[][] cellArray = new Cell[20][12];
	private String firstRow = "   ";
	public Spreadsheet(){
		//make array with empty cell objects
		for(int i = 0; i < 20; i++){
			for(int j = 0; j < 12; j++){
				cellArray[i][j] = new EmptyCell();
			}
		}
		//make first row (A - L)
		for(int i = 0; i < 12; i ++){
				firstRow += "|" + ((char)(i + 65)) + "         ";
		}
		firstRow += "|\n";
	}
	@Override
	public String processCommand(String command)
	{  		
		if(command.length() == 0){
			return "";
		}
		//if command is clear
		if(command.toLowerCase().equals("clear")){
			for(int i = 0; i < 20; i++){
				for(int j = 0; j < 12; j++){
					cellArray[i][j] = new EmptyCell();
				}
			}
			return getGridText();
			
		}
		//if command is for example "clear A1"
		if(command.toLowerCase().contains("clear ")){
			String[] splitCommand = command.split(" ");
			String locationToChange = splitCommand[1];
			SpreadsheetLocation location = new SpreadsheetLocation(locationToChange);
			this.cellArray[location.getRow()][location.getCol()] = new EmptyCell();
			return getGridText();
		}
		//if command is for example "A1 = "hello""
		if(command.contains("=")){
			// split command into location and value
			String[] splitCommand = command.split(" = ");
			String commandLocation = splitCommand[0];
			String commandValue = splitCommand[1];
			System.out.println(splitCommand[2]);
			if(splitCommand.length > 2){
				commandValue += " = " + splitCommand[2];
				System.out.println(commandValue);
			}
			//remove quotes
			if(commandValue.contains("\"")){
				commandValue = splitCommand[1].replace("\"", "");
			}
			
			SpreadsheetLocation location = new SpreadsheetLocation(commandLocation);
	    	this.cellArray[location.getRow()][location.getCol()] = new TextCell(commandValue);
	    	return getGridText();
			
		}
		//if command is only the location, for example "A1"
		SpreadsheetLocation location = new SpreadsheetLocation(command);
		return this.cellArray[location.getRow()][location.getCol()].fullCellText();
	}

	@Override
	public int getRows()
	{
		return this.cellArray.length;
	}

	@Override
	public int getCols()
	{
		return this.cellArray[0].length;
	}

	@Override
	public Cell getCell(Location loc)
	{
		return this.cellArray[loc.getRow()][loc.getCol()];
	}

	@Override
	public String getGridText()
	{
		String SpreadsheetString = "";
		SpreadsheetString += firstRow;
		SpreadsheetString += "1  |";
		for(int i = 0; i < this.cellArray.length; i++){
			for(int j = 0; j < this.cellArray[i].length; j++){
				SpreadsheetString += (cellArray[i][j].abbreviatedCellText());
				if(cellArray[i][j].abbreviatedCellText().length() < 10){
					String cellValue = cellArray[i][j].abbreviatedCellText();
					int difference = 10 - cellArray[i][j].abbreviatedCellText().length();
					for(int k = 0; k < difference; k++){
						cellValue += " ";
						SpreadsheetString += " ";
					}
				}
				SpreadsheetString += "|";
				if(j == 11){
						SpreadsheetString += "\n";
					if(i != 19){
						if(i >= 8){
							SpreadsheetString += (i + 2) + " |"; 
						}else{
							SpreadsheetString += (i + 2) + "  |";
						}
					}
					
				}
			}
		}
		
		return SpreadsheetString;
	}

}
